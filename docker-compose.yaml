version: "3.8"
services:
  client:
    build: .
    ports:
      - "9000:9000"    # React app (frontend)
      - "9099:9099"    # Firebase Auth emulator
      - "4000:4000"    # Firebase Emulator UI
      - "4500:4500"    # Firebase Logging emulator
      - "4400:4400"    # Firebase hub
    networks:
     - breezechess-network
    environment:
      - CHOKIDAR_USEPOLLING=true  # Enable file watching inside Docker
    volumes:
      - .:/app   # Mount the local directory to Docker container
      - ~/.config/configstore:/root/.config/configstore  # Mount the Firebase credentials
    command: ["npm", "run", "dev"]   # Run your dev script

  server:
    build:
      context: ./server  # Assuming you have a 'server' folder for your backend code
    ports:
      - "9001:9001"    # Exposing server port
    depends_on:
      postgres:
        condition: service_healthy  # Ensures server waits until postgres is healthy
    networks:
     - breezechess-network
    volumes:
      - ./server:/app  # Mount the server code to the container
    environment:
      NODE_ENV: development
      POSTGRES_USER: ${POSTGRES_USER}      # Username for the database
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Password for the database
      POSTGRES_DB: ${POSTGRES_DB}          # Database name to create
    command: ["npm", "run", "start"]  # Command to run your server
    restart: always  # This ensures the container restarts automatically

  postgres:
    image: postgres:15  # You can use the latest version or specific version
    environment:
      POSTGRES_USER: ${POSTGRES_USER}      # Username for the database
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Password for the database
      POSTGRES_DB: ${POSTGRES_DB}          # Database name to create
    ports:
      - "5432:5432"  # Expose the PostgreSQL port to the host
    networks:
     - breezechess-network
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent storage for the database
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

networks:
  breezechess-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local  # This ensures the volume is properly defined for persistent storage